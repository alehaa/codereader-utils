# This file is part of crutils.
#
# crutils is free software: you can redistribute it and/or modify it under the
# terms of the GNU Lesser General Public License as published by the Free
# Software Foundation, either version 3 of the License, or (at your option) any
# later version.
#
# crutils is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
# A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
# details.
#
# You should have received a copy of the GNU Lesser General Public License along
# with crutils. If not, see <http://www.gnu.org/licenses/>.
#
#
# Copyright (C)
#   2013-2017 Alexander Haase <ahaase@alexhaase.de>
#

language: c


# General settings for the Linux container builds.
#
# The used distro will be Trusty and sudo is not required. This enabled the
# faster container builds.
os: linux
dist: trusty
sudo: false


# Install packages for Linux.
#
# As the container based builds do not support sudo, the Travis CI apt addon
# will be used to install required dependencies.
addons:
  apt:
    packages:
      - cmake
      - doxygen
      - libconfig-dev
      - libx11-dev
      - libxi-dev
      - help2man




jobs:
  include:
    # The first stage will be a compiliance check to ensure all files follow the
    # defined coding standard and include the required license header. All
    # checks will be operating on a full clone of the repository and check all
    # commits that are not merged to the master branch yet. This means in short:
    # If only one of several commits doesn't follow the standards, these checks
    # will fail, even if the code has been fixed in following commits.
    - stage: compiliance
      env:
        FORMAT
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty
          packages:
            - clang-format-3.8
      git:
        submodules: false
        depth: 9999999
      before_script:
        - git config remote.origin.fetch "+refs/heads/*:refs/remotes/origin/*"
        - git fetch
      script: extra/ci/check_format.sh

    - env:
        LICENSE_HEADER
      addons:
        apt:
      git:
        submodules: false
        depth: 9999999
      before_script:
        - git config remote.origin.fetch "+refs/heads/*:refs/remotes/origin/*"
        - git fetch
      script: extra/license/check_license_header.sh

    # The next stage will check, if the code can be compiled by different
    # compilers and on different platforms. The build script is defined below
    # used by all build jobs.
    - stage: build
      compiler: gcc

    - compiler: clang

    - os: osx
      compiler: clang
      # Install all required packages for OS X builds. The following solution
      # was inspired by http://stackoverflow.com/a/20802381
      before_install:
        - brew update --quiet >& /dev/null
        - for pkg in cmake doxygen libconfig argp-standalone help2man; do
            if brew list -1 | grep -q "^${pkg}\$"; then
              brew outdated $pkg || brew upgrade $pkg;
            else
              brew install $pkg;
            fi
          done


# The following build script will be used by all build jobs / all jobs defining
# no specialiced 'script'. It will build the whole source code with documen-
# tation and installation.
script:
  - mkdir build && cd build
  - cmake .. -DCMAKE_INSTALL_PREFIX=../install
             -DBUILD_DOC=On -DBUILD_DOC_INTERNAL=On
    && make install
