/* This file is part of crutils.
 *
 * crutils is free software: you can redistribute it and/or modify it under the
 * terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation, either version 3 of the License, or (at your option) any
 * later version.
 *
 * crutils is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
 * A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with crutils. If not, see <http://www.gnu.org/licenses/>.
 *
 *
 * Copyright (C)
 *  2013-2017 Alexander Haase <ahaase@alexhaase.de>
 */

/* The following configurations are samples for the specific drivers with their
 * optional and mandatory configuration options.
 *
 * By default this configuration file contains only comments, so no codereaders
 * will be loaded at your system. Add devices in this file, so they get loaded
 * by the applications. */


/* lxinput
 *
 * This driver parses X input events of the specified device file. All users
 * loading this driver MUST have read and write access to the device file,
 * otherwise the driver can't grab the device exclusively.
 *
 * Note: At the moment numeric barcodes are supported only, i.e. UPC, EAN / JAN,
 *       Interleaved 2 of 4, Industrial 2 of 4, Codebar and MSI / Plessy.
 *
 * barcode0 = {
 *   driver = "lxinput";
 *   device = "/dev/input/barcode0";
 * };
 */

/* xinput2
 *
 * This driver attaches to the current X-session of the user and grabs keyboard
 * devices with a name matching one of the substrings in the 'match' option
 * exclusively. The main advantage of this driver is, the user doesn't need any
 * special rights for the devices, as it only communicates within the user's
 * X-session. Full ASCII is supported and the keyboard layout of the input
 * devices will be considered.
 *
 * Note: Even for more than one barcode reader, only one virtual device is
 *       required in this configuration. Just add another entry to the match
 *       array and this device will be grabbed, too.
 *
 * barcode1 = {
 *   driver = "xinput2";
 *   match = ["Barcode"];
 * };
 */
